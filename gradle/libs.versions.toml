[versions]

# Plugin Version
androidGradlePlugin = "8.7.0"
androidLibrary = "8.7.1"
kotlin = "2.0.20"
jvmTarget = "1.8"
kotlinKsp = "2.0.20-1.0.25"
detektVersion = "1.23.7"

# Library Version
kotlinBOM = "2.0.20"
composeBOM = "2024.09.03"

coreKtx = "1.13.1"
splashScreen = "1.0.1"
activityCompose = "1.9.2"
composeNavigation = "2.8.2"
androidXLifecycle = "2.8.6"
composeViewmodel = "2.8.6"
androidMaterial3 = "1.3.0"
hiltAndroid = "2.52"
retrofit = "2.11.0"
okHttp3 = "4.12.0"
moshi = "1.15.1"
javaxInject = "1"
hiltNavigation = "1.2.0"
konsist = "0.16.1"

# Testing Library Version
junit = "4.13.2"
junitExtension = "1.2.1"
espressoCore = "3.6.1"


[libraries]
# Android Core
kotlin-bom = { module = "org.jetbrains.kotlin:kotlin-bom", version.ref = "kotlinBOM" }
core-ktx = { module = "androidx.core:core-ktx", version.ref = "coreKtx" }
androidx-lifecycle = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "androidXLifecycle" }
androidx-splashScreen = { module = "androidx.core:core-splashscreen", version.ref = "splashScreen" }
activity-compose = { module = "androidx.activity:activity-compose", version.ref = "activityCompose" }
compose-lifecycle = { module = "androidx.lifecycle:lifecycle-runtime-compose", version.ref = "androidXLifecycle" }
compose-navigation = { module = "androidx.navigation:navigation-compose", version.ref = "composeNavigation" }

# Compose
compose-bom = { module = "androidx.compose:compose-bom", version.ref = "composeBOM" }
ui-tooling = { module = "androidx.compose.ui:ui-tooling" }
compose-ui = { module = "androidx.compose.ui:ui" }
compose-ui-graphics = { module = "androidx.compose.ui:ui-graphics" }
compose-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview" }
compose-viewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "composeViewmodel" }
androidx-material3 = { module = "androidx.compose.material3:material3", version.ref = "androidMaterial3" }

# Hilt
hilt-android = { module = "com.google.dagger:hilt-android", version.ref = "hiltAndroid" }
hilt-compiler = { module = "com.google.dagger:hilt-compiler", version.ref = "hiltAndroid" }
hilt-navigation = { module = "androidx.hilt:hilt-navigation-compose", version.ref = "hiltNavigation" }

# Networking
okhttp3 = { module = "com.squareup.okhttp3:okhttp", version.ref = "okHttp3" }
loggin-interceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okHttp3" }
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
moshi-converter = { module = "com.squareup.retrofit2:converter-moshi", version.ref = "retrofit" }
moshi-codegen = { module = "com.squareup.moshi:moshi-kotlin-codegen", version.ref = "moshi" }

# Other
javax-inject = { module = "javax.inject:javax.inject", version.ref = "javaxInject" }

# Testing
junit-test = { module = "junit:junit", version.ref = "junit" }
junit-extension-test = { module = "androidx.test.ext:junit", version.ref = "junitExtension" }
espresso-test = { module = "androidx.test.espresso:espresso-core", version.ref = "espressoCore" }
konsist = { module = "com.lemonappdev:konsist", version.ref = "konsist" }
compose-ui-tooling-test = { module = "androidx.compose.ui:ui-tooling" }
compose-manifest-test = { module = "androidx.compose.ui:ui-test-manifest" }


[bundles]
androidx-compose-bom = ["compose-bom", "ui-tooling", "compose-ui", "compose-ui-graphics", "compose-tooling-preview", "androidx-material3"]
retrofit = ["retrofit", "moshi-converter", "okhttp3", "loggin-interceptor"]


[plugins]
android-application = { id = "com.android.application", version.ref = "androidGradlePlugin" }
android-library = { id = "com.android.library", version.ref = "androidLibrary" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
hilt = { id = "com.google.dagger.hilt.android", version.ref = "hiltAndroid" }
kotlin-ksp = { id = "com.google.devtools.ksp", version.ref = "kotlinKsp" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detektVersion" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }